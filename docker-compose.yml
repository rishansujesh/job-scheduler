
services:
  postgres:
    image: postgres:15-alpine
    container_name: js-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-jobs}
      POSTGRES_USER: ${POSTGRES_USER:-jobs}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-jobs}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: js-redis
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "PING"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - redisdata:/data

  api:
    build:
      context: .
      dockerfile: build/api/Dockerfile
    container_name: js-api
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8080:8080"
      - "9090:9090"
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8080/healthz || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20

  scheduler:
    build:
      context: .
      dockerfile: build/scheduler/Dockerfile
    container_name: js-scheduler
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8081:8081"
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8081/healthz || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20

  worker:
    build:
      context: .
      dockerfile: build/worker/Dockerfile
    container_name: js-worker
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8082:8082"
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8082/healthz || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20

  admin:
    build:
      context: .
      dockerfile: build/admin/Dockerfile
    container_name: js-admin
    env_file: .env
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "8083:8083"
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8083/healthz || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20

volumes:
  pgdata:
  redisdata:
